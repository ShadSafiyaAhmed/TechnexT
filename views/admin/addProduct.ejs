<!-- Add Cropper.js CSS -->
<link rel="stylesheet" href="https://unpkg.com/cropperjs/dist/cropper.min.css">

<!-- Add jQuery (required by Cropper.js) -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- Add Cropper.js -->
<script src="https://unpkg.com/cropperjs/dist/cropper.min.js"></script>

<%-include('../layouts2/header.ejs')%>
<style>
    .error-message {
        color: red;
        font-size: 14px;
        margin-top: 5px;
    }
</style>
<form action="/admin/addProduct" method="post" enctype="multipart/form-data" onsubmit="return validateForm()">
<section class="content-main">
    <div class="row">
        <div class="col-6">
            <div class="content-header">
                <h5 class="content-title">Add New Product</h5>
               
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-6">
            <div class="card mb-4">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3">
                            <h6>1. General info</h6>
                        </div>
                        <div class="col-md-9">
                            <div class="mb-4">
                                <label class="form-label">Product Name</label>
                                <input type="text" name="name" placeholder="Type here" class="form-control"  required="true" onkeyup="validateField(this, 'name')" >
                                <div id="nameErrorMessage" class="error-message"></div>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Description</label>
                                <textarea placeholder="Type here" name="description" class="form-control" rows="4"></textarea>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Category</label>
                                <select class="form-select" name="category">
                                    <% category.forEach((cat) => { %>
                                        <option value="<%= cat.category %>"><%= cat.category %></option>
                                    <% }) %>

                                </select>
                                
                            </div>
                        </div> 
                    </div> 
                    <hr class="mb-4 mt-0">
                    <div class="row">
                        <div class="col-md-3">
                            <h6>2. Pricing</h6>
                        </div>
                        <div class="col-md-9">
                            <div class="mb-4">
                                <label class="form-label">Cost in INR</label>
                                <input type="text" name="price" placeholder="INR-00.0" class="form-control" required min="0" onkeyup="validateField(this, 'price')">
                                <div id="priceErrorMessage" class="error-message"></div>
                            </div>
                        </div>
                   
                    </div> 
                    <div class="row">
                      <div class="col-md-3">
                          <h6>3.Stock</h6>
                      </div>
                      <div class="col-md-9">
                          <div class="mb-4">
                              <label class="form-label">Add stock</label>
                              <input type="text" name="stock" placeholder="Enter the Stock" class="form-control" id="stock" required onkeyup="validateField(this, 'stock')">
                              <p id="stockErrorMessage" style="color: red;"></p>
                              
                          </div>
                      </div>
                 
                  </div> 
                    
                    <hr class="mb-4 mt-0">
                    <hr class="mb-4 mt-0">
                    <div class="row">
                        <div class="col-md-3">
                            <h6>4. Media</h6>
                        </div>
                        <div class="col-md-9">
                            <div class="card mb-4">
                                <div class="card-header">
                                  <h4>Media</h4>
                                </div>
                                <div class="input-upload">
                                  <img src="/imgs/theme/upload.svg" id="imgView1" alt="">
                                  <input class="form-control" id="input1" name="file" onchange="viewImage1(event),viewImage(event, 1)" type="file">
                                </div>
                                <div class="image-cropper" style="display:none;">
                                  <img src="" id="croppedImg1" alt="">
                                  <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                                </div>
                    
                            </div> <!-- card end// -->
                            <div class="card mb-4">     
                                <div class="card-header">
                                  <h4>Media</h4>
                                </div>
                                <div class="input-upload">
                                  <img src="/imgs/theme/upload.svg" id="imgView2" alt="">
                                  <input class="form-control" id="input2" name="file" onchange="viewImage2(event),viewImage(event, 2)" type="file">
                                </div>
                                <div class="image-cropper" style="display:none;">
                                  <img src="" id="croppedImg2" alt="">
                                  <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                                </div>
                    
                              </div> <!-- card end// -->
                              <div class="card mb-4">
                                <div class="card-header">
                                  <h4>Media</h4>
                                </div>
                                <div class="input-upload">
                                  <img src="/imgs/theme/upload.svg" id="imgView3" alt="">
                                  <input class="form-control" id="input3" name="file" onchange="viewImage3(event),viewImage(event, 3)" type="file">
                                </div>
                                <div class="image-cropper" style="display:none;">
                                  <img src="" id="croppedImg3" alt="">
                                  <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                                </div>
                              </div> <!-- card end// -->
                            </div>
                            <button  type="submit"  class="btn btn-md rounded font-sm hover-up">Publish</button> 
                           </div>
                        </div> 
                    </div> 
                 
                </div>
            </div>
        </div>

</section>
</form>
<%-include('../layouts2/footer.ejs')%>
<script src="../assets2/js/validation.js" type="text/javascript"></script>
<script>
function viewImage1(event) {
document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])
}

function viewImage2(event) {
document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])
}

function viewImage3(event) {
document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0])
}
</script>
<script>
function viewImage(event, index) {
    let input = event.target;
    let reader = new FileReader();

    reader.onload = function() {
      let dataURL = reader.result;
      let image = document.getElementById('imgView' + index);
      image.src = dataURL;

      // Initialize Cropper.js on the image
      let cropper = new Cropper(image, {
        aspectRatio: 1 / 1, // Set the aspect ratio to 1:1 for square images
        viewMode: 1, // Set the view mode to crop box
        guides: true, // Show the crop guides
        background: false, // Do not show the background behind the image
        autoCropArea: 1, // Set the initial crop area to cover the whole image
        zoomable: true // Disable zooming to keep the image size fixed
      });

      // Show the image cropper container
      let cropperContainer = document.querySelector('#croppedImg' + index).parentNode;
      cropperContainer.style.display = 'block';

      // Update the cropped image when the "Save" button is clicked
      let saveButton = document.querySelector('#saveButton' + index);
      saveButton.addEventListener('click', async function() {
        let croppedCanvas = cropper.getCroppedCanvas({
          width: 1500, 
          height: 1500 
        });
        let croppedImage = document.getElementById("croppedImg" + index);
        croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);

        // Generate a unique name for the cropped image file based on the current timestamp
        let timestamp = new Date().getTime();
        let fileName = `cropped-img-${timestamp}-${index}.png`;

        await croppedCanvas.toBlob(blob => {
          let input = document.getElementById('input' + index)
          let imgFile = new File([blob], fileName, blob)
          const fileList = new DataTransfer();
          fileList.items.add(imgFile);
          input.files = fileList.files
        });
        // cropperContainer.style.display = 'none';
      });

    };

    reader.readAsDataURL(input.files[0]);
  }
</script>

